image: Visual Studio 2017
platform:
- x64

environment:
  matrix:
    - CHANNEL: nightly
      FEATURES: alloc_system
      PLATFORM_TARGET: x86_64
      PLATFORM_VS: x64

    # TODO: The i686 build currently doesn't work.
    # - CHANNEL: nightly
    #   FEATURES: alloc_system
    #   PLATFORM_TARGET: i686
    #   PLATFORM_VS: x86

install:
  # Install Rust.
  - appveyor-retry appveyor DownloadFile https://win.rustup.rs/ -FileName rustup-init.exe
  - rustup-init -yv --default-toolchain %CHANNEL% --default-host x86_64-pc-windows-msvc
  - set PATH=%USERPROFILE%\.cargo\bin;%PATH%
  - rustc -vV
  - cargo -vV

  # Install LLVM.
  - appveyor-retry appveyor DownloadFile https://github.com/marco-c/llvm-appveyor/releases/download/llvm_342383/clang.tar.bz2 -FileName clang.tar.bz2
  - 7z x clang.tar.bz2
  - 7z x clang.tar
  - set PATH=clang\bin;%PATH%
  - llvm-config --version
  - llvm-config --host-target

  - set TARGET=%PLATFORM_TARGET%-pc-windows-msvc
  - if NOT "%PLATFORM_TARGET%" == "x86_64" (
      rustup target add %TARGET%
    )
  - if [%APPVEYOR_REPO_TAG%]==[false] (set BUILD_TYPE=debug)
  - if [%APPVEYOR_REPO_TAG%]==[true] (set BUILD_TYPE=release)
  - if [%BUILD_TYPE%]==[debug] (set CARGO_RELEASE_ARG=)
  - if [%BUILD_TYPE%]==[release] (set CARGO_RELEASE_ARG=--release)

build_script:
  - cargo build %CARGO_RELEASE_ARG% --features=%FEATURES% --locked --target %TARGET%
  - 7z a grcov-win-%PLATFORM_TARGET%.tar .\target\%TARGET%\%BUILD_TYPE%\grcov.exe
  - 7z a grcov-win-%PLATFORM_TARGET%.tar.bz2 grcov-win-%PLATFORM_TARGET%.tar

test_script:
  - ps: echo $env:CHANNEL
  - ps: |
      If ($env:CHANNEL -eq "nightly") {
         $env:CXX = "clang-cl.exe"
         $env:CXXFLAGS = "--coverage"
         $env:CARGO_INCREMENTAL = "0"
         $env:RUSTFLAGS = "-Zprofile -Ccodegen-units=1 -Ctarget-feature=+crt-static"
         cargo clean
      }
  - cargo test %CARGO_RELEASE_ARG% --verbose
  - ps: |
      If ($env:CHANNEL -eq "nightly") {
         mkdir ccov_dir
         Get-ChildItem -Path *\grcov*.gc* -Recurse | Copy-Item -Destination ccov_dir
         Get-ChildItem -Path *\llvmgcov.gc* -Recurse | Copy-Item -Destination ccov_dir
         .\target\debug\grcov ccov_dir -s src -t lcov --llvm --branch --ignore-dir libstd\* --ignore-dir libcore\* --ignore-dir liballoc\* --ignore-dir libtest\* --ignore-dir "<*" --ignore-dir "path_rewriting.rs" > lcov.info
         $env:PATH = "C:\msys64\usr\bin;" + $env:PATH
         Invoke-WebRequest -Uri "https://codecov.io/bash" -OutFile codecov.sh
         bash codecov.sh -f "lcov.info"
      }

artifacts:
  - path: grcov-win-$(PLATFORM_TARGET).tar.bz2

deploy:
  artifact: grcov-win-$(PLATFORM_TARGET).tar.bz2
  auth_token:
    secure: /BjmtIYmmvSDJ5939QEcd857vcA29dIlcb/u6wgbWkAm+Cp4LN2KTi3+cVveoqz+
  description: ''
  on:
    CHANNEL: nightly
    appveyor_repo_tag: true
  provider: GitHub
